{"version":3,"sources":["main.js"],"names":["restaurants","neighborhoods","cuisines","map","markers","document","addEventListener","event","fillSearchingCriteria","getSearchCriteriaValues","self","searchWorker","Worker","postMessage","onmessage","message","cuisinesHTML","data","CuisinesHTML","neighborhoodsHTML","NeighborhoodsHTML","getElementById","innerHTML","window","allResturnats","error","rests","DBHelper","fetchRestaurants","undefined","fetchSearchValues","console","fillCuisinesHTML","fillNeighborhoodsHTML","select","forEach","option","createElement","neighborhood","value","append","cuisine","initMap","loc","lat","lng","google","maps","Map","zoom","center","scrollwheel","updateRestaurants","cSelect","nSelect","cIndex","selectedIndex","nIndex","favoriteURLCondition","isFavoritSearchRequired","resturantSearchWorker","messageData","id","resetRestaurants","addMarkersToMap","restHTML","resturantsHTML","configureIntersectionObserver","fetchRestaurantByCuisineAndNeighborhood","fillRestaurantsHTML","favList","getElementsByName","filter","i","length","checked","filterCondition","ul","m","setMap","index","createRestaurantHTML","restaurant","li","imgsList","imagesUrlForRestaurant","picture","className","display","img1","media","srcset","img2","img","alt","name","cuisine_type","address","setAttribute","heartClass","is_favorite","favSpan","CONST_FAVORITIFY_ACTION_SPAN_ID_PREFIX","appendChild","more","role","href","urlForRestaurant","marker","mapMarkerForRestaurant","addListener","location","url","push","images","imageCount","observer","querySelectorAll","config","rootMargin","threshold","loadImagesImmediately","IntersectionObserver","onIntersection","image","classList","contains","observe","fetchImage","Promise","resolve","reject","Image","src","onload","onerror","preloadImage","dataset","then","applyImage","children","disconnect","entries","entry","intersectionRatio","unobserve","target","add"],"mappings":"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","file":"main.js","sourcesContent":["let restaurants,\r\n  neighborhoods,\r\n  cuisines\r\nvar map\r\nvar markers = []\r\n\r\n/**\r\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\r\n */\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n  // fetchNeighborhoods();\r\n  // fetchCuisines();\r\n\r\n  fillSearchingCriteria();\r\n});\r\n\r\n\r\nvar getSearchCriteriaValues=(restaurants = self.restaurants)=>{\r\n  let searchWorker = new Worker('scripts/workers/searchCriteriaWorker.js');\r\n  searchWorker.postMessage( {'restaurants': self.restaurants} );\r\n  searchWorker.onmessage = (message)=>{\r\n    let cuisinesHTML = message.data.CuisinesHTML;\r\n    let neighborhoodsHTML = message.data.NeighborhoodsHTML;\r\n    document.getElementById('neighborhoods-select').innerHTML = neighborhoodsHTML;\r\n    document.getElementById('cuisines-select').innerHTML = cuisinesHTML;\r\n  }\r\n}\r\n\r\nvar fillSearchingCriteria = ()=>{\r\n  if (window.Worker){\r\n    allResturnats((error,rests)=>{\r\n      if(rests){\r\n        self.restaurants = rests;\r\n        getSearchCriteriaValues(restaurants);\r\n      }else{\r\n        DBHelper.fetchRestaurants(undefined, (error, restaurants)=>{\r\n          self.restaurants = restaurants;\r\n          getSearchCriteriaValues(restaurants);\r\n        });\r\n      }\r\n    });\r\n\r\n\r\n  }else{\r\n    DBHelper.fetchSearchValues((error, neighborhoods, cuisines) => {\r\n      if (error) { // Got an error\r\n        console.error(error);\r\n      } else {\r\n        self.neighborhoods = neighborhoods;\r\n        self.cuisines = cuisines;\r\n        fillCuisinesHTML();\r\n        fillNeighborhoodsHTML();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch all neighborhoods and set their HTML.\r\n */\r\n// var fetchNeighborhoods = () => {\r\n//   DBHelper.fetchNeighborhoods((error, neighborhoods) => {\r\n//     if (error) { // Got an error\r\n//       console.error(error);\r\n//     } else {\r\n//       self.neighborhoods = neighborhoods;\r\n//       fillNeighborhoodsHTML();\r\n//     }\r\n//   });\r\n// }\r\n\r\n/**\r\n * Set neighborhoods HTML.\r\n */\r\nvar fillNeighborhoodsHTML = (neighborhoods = self.neighborhoods) => {\r\n  const select = document.getElementById('neighborhoods-select');\r\n  neighborhoods.forEach(neighborhood => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = neighborhood;\r\n    option.value = neighborhood;\r\n    select.append(option);\r\n  });\r\n}\r\n\r\n/**\r\n * Fetch all cuisines and set their HTML.\r\n */\r\n// var fetchCuisines = () => {\r\n//   DBHelper.fetchCuisines((error, cuisines) => {\r\n//     if (error) { // Got an error!\r\n//       console.error(error);\r\n//     } else {\r\n//       self.cuisines = cuisines;\r\n//       fillCuisinesHTML();\r\n//     }\r\n//   });\r\n// }\r\n\r\n/**\r\n * Set cuisines HTML.\r\n */\r\nvar fillCuisinesHTML = (cuisines = self.cuisines) => {\r\n  const select = document.getElementById('cuisines-select');\r\n\r\n  cuisines.forEach(cuisine => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = cuisine;\r\n    option.value = cuisine;\r\n    select.append(option);\r\n  });\r\n}\r\n\r\n/**\r\n * Initialize Google map, called from HTML.\r\n */\r\nwindow.initMap = () => {\r\n  let loc = {\r\n    lat: 40.722216,\r\n    lng: -73.987501\r\n  };\r\n  self.map = new google.maps.Map(document.getElementById('map'), {\r\n    zoom: 12,\r\n    center: loc,\r\n    scrollwheel: false\r\n  });\r\n  updateRestaurants();\r\n}\r\n\r\n/**\r\n * Update page and map for current restaurants.\r\n */\r\nvar updateRestaurants = () => {\r\n  const cSelect = document.getElementById('cuisines-select');\r\n  const nSelect = document.getElementById('neighborhoods-select');\r\n\r\n  const cIndex = cSelect.selectedIndex;\r\n  const nIndex = nSelect.selectedIndex;\r\n\r\n  const cuisine = cSelect[cIndex].value;\r\n  const neighborhood = nSelect[nIndex].value;\r\n  let favoriteURLCondition = isFavoritSearchRequired();\r\n\r\n  if(window.Worker){\r\n    let resturantSearchWorker = new Worker('scripts/workers/resturantSearchWorker.js');\r\n    if(self.restaurants){\r\n      resturantSearchWorker.postMessage({\r\n        'restaurants': self.restaurants, \r\n        'cuisine': cuisine,\r\n        'neighborhood': neighborhood,\r\n        'favoriteURLCondition': favoriteURLCondition});\r\n    }else{\r\n      allResturnats((error,rests)=>{\r\n        if(rests){\r\n          resturantSearchWorker.postMessage({\r\n            'restaurants': rests, \r\n            'cuisine': cuisine,\r\n            'neighborhood': neighborhood,\r\n            'favoriteURLCondition': favoriteURLCondition});\r\n        }else{\r\n          DBHelper.fetchRestaurants(favoriteURLCondition, (error, restaurants)=>{\r\n            resturantSearchWorker.postMessage({\r\n            'restaurants': restaurants, \r\n            'cuisine': cuisine,\r\n            'neighborhood': neighborhood,\r\n            'favoriteURLCondition': favoriteURLCondition});\r\n          });\r\n        }\r\n      });\r\n    }\r\n    resturantSearchWorker.onmessage = (message)=>{\r\n      // TODO\r\n      let messageData = message.data;\r\n      if(messageData.id === 1){\r\n        self.restaurants = messageData.restaurants;\r\n        resetRestaurants(self.restaurants);\r\n        addMarkersToMap(self.restaurants);\r\n      }else if(messageData.id === 2){\r\n        let restHTML = messageData.resturantsHTML;\r\n        document.getElementById('restaurants-list').innerHTML = restHTML;\r\n        configureIntersectionObserver();\r\n        self.restaurants = undefined;\r\n      }\r\n    }\r\n\r\n  }else{\r\n    DBHelper.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, favoriteURLCondition, (error, restaurants) => {\r\n      if (error) { // Got an error!\r\n        console.error(error);\r\n      } else {\r\n        resetRestaurants(restaurants);\r\n        fillRestaurantsHTML();\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n\r\nvar isFavoritSearchRequired =()=>{\r\n  let favList = document.getElementsByName('favoriteSearch');\r\n  let filter = 'all'; // Favorite  unFavorite\r\n  for(let i = 0  ; i < favList.length ;i++){\r\n    if(favList[i].checked){\r\n      filter= favList[i].value;\r\n      break;\r\n    }\r\n  }\r\n  let filterCondition = undefined;\r\n  if(filter != 'all'){\r\n    filterCondition = filter; // true or false\r\n  }\r\n\r\n  return filterCondition;\r\n}\r\n\r\n/**\r\n * Clear current restaurants, their HTML and remove their map markers.\r\n */\r\nvar resetRestaurants = (restaurants) => {\r\n  // Remove all restaurants\r\n  self.restaurants = [];\r\n  const ul = document.getElementById('restaurants-list');\r\n  ul.innerHTML = '';\r\n\r\n  // Remove all map markers\r\n  self.markers.forEach(m => m.setMap(null));\r\n  self.markers = [];\r\n  self.restaurants = restaurants;\r\n}\r\n\r\n/**\r\n * Create all restaurants HTML and add them to the webpage.\r\n */\r\nvar fillRestaurantsHTML = (restaurants = self.restaurants) => {\r\n  const ul = document.getElementById('restaurants-list');\r\n  let index = 0;\r\n  restaurants.forEach(restaurant => {\r\n    ul.append(createRestaurantHTML(restaurant, index));\r\n    index++;\r\n  });\r\n  addMarkersToMap();\r\n  configureIntersectionObserver();\r\n}\r\n\r\n/**\r\n * Create restaurant HTML.\r\n */\r\nvar createRestaurantHTML = (restaurant, index) => {\r\n  const li = document.createElement('div');\r\n\r\n  // TODO chage it to picture\r\n//  const image = document.createElement('img');\r\n//  image.className = 'restaurant-img';\r\n//  image.src = DBHelper.imageUrlForRestaurant(restaurant);\r\n//  li.append(image);\r\n\t\r\n\tlet imgsList = DBHelper.imagesUrlForRestaurant(restaurant);\r\n\tconst picture = document.createElement('picture');\r\n\tpicture.className = 'js-lazy-image';\r\n  picture.display = 'none';\r\n\tconst img1 = document.createElement('source');\r\n\timg1.media = '(min-width: 1500px)';\r\n\timg1.className = 'restaurant-img';\r\n\timg1.srcset = imgsList[1];\r\n\r\n\tpicture.append(img1);\r\n\tconst img2 = document.createElement('source');\r\n\timg2.media = '(min-width: 800px)';\r\n\timg2.className = 'restaurant-img';\r\n\timg2.srcset = imgsList[2];\r\n\tpicture.append(img2);\r\n\tconst img = document.createElement('img');\r\n\timg.alt = restaurant.name + ' restaurant , provide ' + restaurant.cuisine_type + ', Located in ' + restaurant.address;\r\n\t// img.src = imgsList[3];\r\n  img.setAttribute('data-src', imgsList[3]);\r\n\timg.className = 'restaurant-img';\r\n\tpicture.append(img);\r\n\tli.append(picture);\r\n\r\n  const name = document.createElement('h2');\r\n  name.innerHTML = restaurant.name;\r\n\r\n  let heartClass = 'fontawesome-heart-empty';\r\n  if(restaurant.is_favorite === true || restaurant.is_favorite === 'true'){\r\n    heartClass = 'fontawesome-heart';\r\n  }\r\n  let favSpan = document.createElement('button');\r\n  favSpan.id = `${CONST_FAVORITIFY_ACTION_SPAN_ID_PREFIX}${restaurant.id}`;\r\n  favSpan.className = heartClass;\r\n  favSpan.setAttribute('onclick',`markRestaurantAsFavorit(${restaurant.id}, ${restaurant.is_favorite}, ${index})`);\r\n  favSpan.setAttribute('role', 'presentation');\r\n  favSpan.setAttribute('aria-label', 'Add to Favorite');\r\n  name.appendChild(favSpan);\r\n  li.append(name);\r\n\r\n  const neighborhood = document.createElement('p');\r\n  neighborhood.innerHTML = restaurant.neighborhood;\r\n  li.append(neighborhood);\r\n\r\n  const address = document.createElement('p');\r\n  address.innerHTML = restaurant.address;\r\n  li.append(address);\r\n\r\n  const more = document.createElement('a');\r\n  more.innerHTML = 'View Details';\r\n  more.role = 'button';\r\n  more.href = DBHelper.urlForRestaurant(restaurant);\r\n  li.append(more)\r\n\r\n  return li\r\n}\r\n\r\n/**\r\n * Add markers for current restaurants to the map.\r\n */\r\nvar addMarkersToMap = (restaurants = self.restaurants) => {\r\n  restaurants.forEach(restaurant => {\r\n    // Add marker to the map\r\n    const marker = DBHelper.mapMarkerForRestaurant(restaurant, self.map);\r\n    google.maps.event.addListener(marker, 'click', () => {\r\n      window.location.href = marker.url\r\n    });\r\n    self.markers.push(marker);\r\n  });\r\n}\r\n\r\n\r\n\r\n/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ \r\n  * intersection observer section \r\n*/\r\n\r\nlet images, imageCount, observer;\r\nvar configureIntersectionObserver = ()=>{\r\n  // Get all of the images that are marked up to lazy load\r\n  images = document.querySelectorAll('.js-lazy-image');\r\n  const config = {\r\n    // If the image gets within 50px in the Y axis, start the download.\r\n    rootMargin: '50px 0px',\r\n    threshold: 0.01\r\n  };\r\n  imageCount = images.length;\r\n  // If we don't have support for intersection observer, loads the images immediately\r\n  if (!('IntersectionObserver' in window)) {\r\n    loadImagesImmediately(images);\r\n  } else {\r\n    // It is supported, load the images\r\n    observer = new IntersectionObserver(onIntersection, config);\r\n\r\n    // foreach() is not supported in IE\r\n    for (let i = 0; i < images.length; i++) { \r\n      let image = images[i];\r\n      if (image.classList.contains('js-lazy-image--handled')) {\r\n        continue;\r\n      }\r\n\r\n      observer.observe(image);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Fetchs the image for the given URL\r\n * @param {string} url \r\n */\r\nfunction fetchImage(url) {\r\n  return new Promise((resolve, reject) => {\r\n    const image = new Image();\r\n    image.src = url;\r\n    image.onload = resolve;\r\n    image.onerror = reject;\r\n  });\r\n}\r\n\r\n/**\r\n * Preloads the image\r\n * @param {object} image \r\n */\r\nfunction preloadImage(image) {\r\n  const src = image.dataset.src;\r\n  if (!src) {\r\n    return;\r\n  }\r\n\r\n  return fetchImage(src).then(() => { applyImage(image, src); });\r\n}\r\n\r\n/**\r\n * Load all of the images immediately\r\n * @param {NodeListOf<Element>} images \r\n */\r\nfunction loadImagesImmediately(images) {\r\n  // foreach() is not supported in IE\r\n  for (let i = 0; i < images.length; i++) { \r\n    let image = images[i];\r\n    preloadImage(image.children[2]);\r\n  }\r\n}\r\n\r\n/**\r\n * Disconnect the observer\r\n */\r\nfunction disconnect() {\r\n  if (!observer) {\r\n    return;\r\n  }\r\n\r\n  observer.disconnect();\r\n}\r\n\r\n/**\r\n * On intersection\r\n * @param {array} entries \r\n */\r\nfunction onIntersection(entries) {\r\n  // Disconnect if we've already loaded all of the images\r\n  if (imageCount === 0) {\r\n    observer.disconnect();\r\n  }\r\n\r\n  // Loop through the entries\r\n  for (let i = 0; i < entries.length; i++) { \r\n    let entry = entries[i];\r\n    // Are we in viewport?\r\n    if (entry.intersectionRatio > 0) {\r\n      imageCount--;\r\n\r\n      // Stop watching and load the image\r\n      observer.unobserve(entry.target);\r\n      preloadImage(entry.target.children[2]);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Apply the image\r\n * @param {object} img \r\n * @param {string} src \r\n */\r\nfunction applyImage(img, src) {\r\n  // Prevent this from being lazy loaded a second time.\r\n  img.classList.add('js-lazy-image--handled');\r\n  img.src = src;\r\n  // img.classList.add('fade-in');\r\n}\r\n\r\n\r\n"]}