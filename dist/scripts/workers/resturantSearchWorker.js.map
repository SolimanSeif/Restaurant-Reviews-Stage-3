{"version":3,"sources":["workers/resturantSearchWorker.js"],"names":["self","importScripts","onmessage","message","restaurants","data","cuisine","neighborhood","favoriteURLCondition","filter","r","cuisine_type","is_favorite","postMessage","index","resturantsHTML","forEach","generateRestaurantHTML","restaurant","imgsList","DBHelper","imagesUrlForRestaurant","picture","img1","img2","alt","name","address","img","heartClass","favButton","id","more","urlForRestaurant","li"],"mappings":";;AACAA,KAAKC,aAAL,CAAmB,gBAAnB;;AAEAD,KAAKE,SAAL,GAAiB,UAACC,OAAD,EAAW;AAC3B,MAAIC,cAAcD,QAAQE,IAAR,CAAaD,WAA/B;AACA,MAAIE,UAAUH,QAAQE,IAAR,CAAaC,OAA3B;AACC,MAAIC,eAAeJ,QAAQE,IAAR,CAAaE,YAAhC;AACA,MAAIC,uBAAuBL,QAAQE,IAAR,CAAaG,oBAAxC;;AAED,MAAIF,WAAW,KAAf,EAAsB;AAAE;AACrBF,kBAAcA,YAAYK,MAAZ,CAAmB;AAAA,aAAKC,EAAEC,YAAF,IAAkBL,OAAvB;AAAA,KAAnB,CAAd;AACD;AACD,MAAIC,gBAAgB,KAApB,EAA2B;AAAE;AAC3BH,kBAAcA,YAAYK,MAAZ,CAAmB;AAAA,aAAKC,EAAEH,YAAF,IAAkBA,YAAvB;AAAA,KAAnB,CAAd;AACD;;AAED,MAAGC,oBAAH,EAAwB;AACtBJ,kBAAcA,YAAYK,MAAZ,CAAmB;AAAA,aAAKC,EAAEE,WAAF,IAAiBJ,oBAAjB,IACpCE,EAAEE,WAAF,IAAiB,KAAjB,IAA0BJ,yBAAyB,OADf,IAC0BE,EAAEE,WAAF,IAAiB,IAAjB,IAAyBJ,yBAAyB,MADjF;AAAA,KAAnB,CAAd;AAED;;AAEDK,cAAY,EAAC,MAAM,CAAP,EAAU,eAAeT,WAAzB,EAAZ;AACA,MAAIU,QAAQ,CAAZ;AACA,MAAIC,iBAAiB,EAArB;AACAX,cAAYY,OAAZ,CAAoB,sBAAc;AAChCD,qBAAiBA,iBAAiBE,uBAAuBC,UAAvB,EAAmCJ,KAAnC,CAAlC;AACAA;AACD,GAHD;AAIAD,cAAY,EAAC,MAAM,CAAP,EAAU,kBAAkBE,cAA5B,EAAZ;AACD,CA1BD;;AA6BA,IAAIE,yBAAyB,SAAzBA,sBAAyB,CAACC,UAAD,EAAaJ,KAAb,EAAuB;;AAGlD,MAAIK,WAAWC,SAASC,sBAAT,CAAgCH,UAAhC,CAAf;;AAEA,MAAII,UAAU,iCAAd;AACA,MAAIC,+EAA6EJ,SAAS,CAAT,CAA7E,OAAJ;AACA,MAAIK,8EAA4EL,SAAS,CAAT,CAA5E,OAAJ;;AAEA,MAAIM,MAAMP,WAAWQ,IAAX,GAAkB,wBAAlB,GAA6CR,WAAWP,YAAxD,GAAuE,eAAvE,GAAyFO,WAAWS,OAA9G;AACA,MAAIC,qBAAmBH,GAAnB,oBAAqCN,SAAS,CAAT,CAArC,+BAAJ;AACAG,YAAUA,UAAUC,IAAV,GAAiBC,IAAjB,GAAwBI,GAAxB,GAA8B,YAAxC;;AAKA,MAAIC,aAAa,yBAAjB;AACA,MAAGX,WAAWN,WAAX,KAA2B,IAA3B,IAAmCM,WAAWN,WAAX,KAA2B,MAAjE,EAAwE;AACtEiB,iBAAa,mBAAb;AACD;;AAED,MAAIC,yCAAuCZ,WAAWa,EAAlD,iBAAgEF,UAAhE,0DAA+HX,WAAWa,EAA1I,UAAiJb,WAAWN,WAA5J,UAA4KE,KAA5K,kEAAJ;;AAGA,MAAMY,gBAAcR,WAAWQ,IAAzB,GAAgCI,SAAhC,UAAN;;AAEA,MAAIvB,uBAAqBW,WAAWX,YAAhC,SAAJ;AACA;AACA;;AAEA,MAAMoB,kBAAgBT,WAAWS,OAA3B,SAAN;AACA;AACA;;AAEA,MAAMK,mCAAiCZ,SAASa,gBAAT,CAA0Bf,UAA1B,CAAjC,uBAAN;AACA;AACA;AACA;AACA;;AAEA,MAAIgB,KAAK,UAAUZ,OAAV,GAAoBI,IAApB,GAA0BnB,YAA1B,GAAyCoB,OAAzC,GAAmDK,IAAnD,GAA0D,QAAnE;;AAEA,SAAOE,EAAP;AACD,CA3CD","file":"resturantSearchWorker.js","sourcesContent":["\r\nself.importScripts('../dbhelper.js');\r\n\r\nself.onmessage = (message)=>{\r\n\tlet restaurants = message.data.restaurants;\r\n\tlet cuisine = message.data.cuisine;\r\n  let neighborhood = message.data.neighborhood;\r\n  let favoriteURLCondition = message.data.favoriteURLCondition;\r\n\r\n\tif (cuisine != 'all') { // filter by cuisine\r\n    restaurants = restaurants.filter(r => r.cuisine_type == cuisine);\r\n  }\r\n  if (neighborhood != 'all') { // filter by neighborhood\r\n    restaurants = restaurants.filter(r => r.neighborhood == neighborhood);\r\n  }\r\n\r\n  if(favoriteURLCondition){\r\n    restaurants = restaurants.filter(r => r.is_favorite == favoriteURLCondition || \r\n      r.is_favorite == false && favoriteURLCondition === 'false' || r.is_favorite == true && favoriteURLCondition === 'true');\r\n  }\r\n\r\n  postMessage({'id': 1, 'restaurants': restaurants});\r\n  let index = 0;\r\n  let resturantsHTML = '';\r\n  restaurants.forEach(restaurant => {\r\n    resturantsHTML = resturantsHTML + generateRestaurantHTML(restaurant, index);\r\n    index++;\r\n  });\r\n  postMessage({'id': 2, 'resturantsHTML': resturantsHTML});\r\n}\r\n\r\n\r\nvar generateRestaurantHTML = (restaurant, index) => {\r\n  \r\n  \r\n  let imgsList = DBHelper.imagesUrlForRestaurant(restaurant);\r\n\r\n  let picture = '<picture class=\"js-lazy-image\">';\r\n  let img1 = `<source media=\"(min-width: 1500px)\" class=\"restaurant-img\" srcset=\"${imgsList[1]}\">`;\r\n  let img2 = `<source media=\"(min-width: 800px)\" class=\"restaurant-img\" srcset=\"${imgsList[2]}\">`;\r\n  \r\n  let alt = restaurant.name + ' restaurant , provide ' + restaurant.cuisine_type + ', Located in ' + restaurant.address;\r\n  let img = `<img alt=\"${alt}\" data-src=\"${imgsList[3]}\" class=\"restaurant-img\" >`;\r\n  picture = picture + img1 + img2 + img + '</picture>';\r\n  \r\n\r\n  \r\n  \r\n  let heartClass = 'fontawesome-heart-empty';\r\n  if(restaurant.is_favorite === true || restaurant.is_favorite === 'true'){\r\n    heartClass = 'fontawesome-heart';\r\n  }\r\n\r\n  let favButton = `<button id=\"FavoritMark_${restaurant.id}\" class=\"${heartClass} favoriteButton\" onclick=\"markRestaurantAsFavorit(${restaurant.id}, ${restaurant.is_favorite}, ${index})\" role=\"presentation\" aria-label=\"Add to Favorite\"></button>`;\r\n  \r\n\r\n  const name = `<h2>${restaurant.name}${favButton}</h2>`;\r\n\r\n  let neighborhood = `<p>${restaurant.neighborhood}</p>`;\r\n  // neighborhood.innerHTML = restaurant.neighborhood;\r\n  // li.append(neighborhood);\r\n\r\n  const address = `<p>${restaurant.address}</p>`;\r\n  // address.innerHTML = restaurant.address;\r\n  // li.append(address);\r\n\r\n  const more = `<a role=\"button\" href=\"${DBHelper.urlForRestaurant(restaurant)}\">View Details</a>`;\r\n  // more.innerHTML = 'View Details';\r\n  // more.role = 'button';\r\n  // more.href = DBHelper.urlForRestaurant(restaurant);\r\n  // li.append(more)\r\n\r\n  let li = '<div>' + picture + name +neighborhood + address + more + '</div>';\r\n  \r\n  return li;\r\n}"]}