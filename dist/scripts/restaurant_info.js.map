{"version":3,"sources":["restaurant_info.js"],"names":["restaurant","map","resturantID","window","initMap","fetchRestaurantFromURL","error","console","self","google","maps","Map","document","getElementById","zoom","center","latlng","scrollwheel","fillBreadcrumb","DBHelper","mapMarkerForRestaurant","callback","id","getParameterByName","fetchRestaurantById","fillRestaurantHTML","fetchRestaurantReviews","fillReviewsHTML","afterSubmittingReviewFail","name","innerHTML","address","picture","className","imgsList","imagesUrlForRestaurant","img1","createElement","media","srcset","appendChild","img2","img","alt","cuisine_type","src","cuisine","operating_hours","fillRestaurantHoursHTML","operatingHours","hours","key","row","day","time","reviews","container","noReviews","ul","Worker","revWorker","postMessage","onmessage","message","content","data","forEach","createReviewHTML","review","li","date","createDate","Date","createdAt","toDateString","head","rating","getRatingClassName","comments","rate","rateName","breadcrumb","url","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","submitUserReviewForm","log","value","comm","rateList","getElementsByName","i","length","checked","undefined","alert","reviewInfo","now","jsonData","JSON","stringify","fetch","method","body","headers","then","response","json","catch","e","jsonObj","afterSubmittingReviewSuccess","addToSyncListReviews","clearSubmittedReview"],"mappings":"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","file":"restaurant_info.js","sourcesContent":["let restaurant;\r\nvar map;\r\nlet resturantID;\r\n/**\r\n * Initialize Google map, called from HTML.\r\n */\r\nwindow.initMap = () => {\r\n  fetchRestaurantFromURL((error, restaurant) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      self.map = new google.maps.Map(document.getElementById('map'), {\r\n        zoom: 16,\r\n        center: restaurant.latlng,\r\n        scrollwheel: false\r\n      });\r\n      fillBreadcrumb();\r\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Get current restaurant from page URL.\r\n */\r\nvar fetchRestaurantFromURL = (callback) => {\r\n  if (self.restaurant) { // restaurant already fetched!\r\n    callback(null, self.restaurant)\r\n    return;\r\n  }\r\n  const id = getParameterByName('id');\r\n  self.resturantID = id;\r\n  if (!id) { // no id found in URL\r\n    error = 'No restaurant id in URL'\r\n    callback(error, null);\r\n  } else {\r\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\r\n      self.restaurant = restaurant;\r\n      if (!restaurant) {\r\n        console.error(error);\r\n        return;\r\n      }\r\n      fillRestaurantHTML();\r\n      callback(null, restaurant)\r\n    });\r\n\r\n    DBHelper.fetchRestaurantReviews(id, \r\n    //   (error, reviews) => {\r\n    //   if (!reviews) {\r\n    //     console.error(error);\r\n    //     return;\r\n    //   }\r\n    //   fillReviewsHTML(reviews);\r\n    // }\r\n    fillReviewsHTML, afterSubmittingReviewFail);\r\n  }\r\n}\r\n\r\n/**\r\n * Create restaurant HTML and add it to the webpage\r\n */\r\nvar fillRestaurantHTML = (restaurant = self.restaurant) => {\r\n  const name = document.getElementById('restaurant-name');\r\n  name.innerHTML = restaurant.name;\r\n\r\n  const address = document.getElementById('restaurant-address');\r\n  address.innerHTML = restaurant.address;\r\n\r\n  // TODO picture from HTML and change the requirement from here.\r\n  const picture = document.getElementById('restaurant-img');\r\n  picture.className = 'restaurant-img';\r\n//  image.src = DBHelper.imageUrlForRestaurant(restaurant);\r\n  \r\n  \r\n\tlet imgsList = DBHelper.imagesUrlForRestaurant(restaurant);\r\n\tconst img1 = document.createElement('source');\r\n\timg1.media = '(min-width: 1500px)';\r\n\timg1.srcset = imgsList[0];\r\n\timg1.className = 'restaurant-img';\r\n\tpicture.appendChild(img1);\r\n\tconst img2 = document.createElement('source');\r\n\timg2.media = '(min-width: 800px)';\r\n\timg2.srcset = imgsList[1];\r\n\timg2.className = 'restaurant-img';\r\n\tpicture.appendChild(img2);\r\n\tconst img = document.createElement('img');\r\n\timg.alt = restaurant.name + ' restaurant , provide ' + restaurant.cuisine_type + ', Located in ' + restaurant.address;\r\n\timg.src = imgsList[2];\r\n\timg.className = 'restaurant-img';\r\n\tpicture.appendChild(img);\r\n  \r\n  \r\n  const cuisine = document.getElementById('restaurant-cuisine');\r\n  cuisine.innerHTML = restaurant.cuisine_type;\r\n\r\n  // fill operating hours\r\n  if (restaurant.operating_hours) {\r\n    fillRestaurantHoursHTML();\r\n  }\r\n  // // fill reviews\r\n  // fillReviewsHTML();\r\n}\r\n\r\n/**\r\n * Create restaurant operating hours HTML table and add it to the webpage.\r\n */\r\nvar fillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\r\n  const hours = document.getElementById('restaurant-hours');\r\n  for (let key in operatingHours) {\r\n    const row = document.createElement('tr');\r\n\r\n    const day = document.createElement('td');\r\n    day.innerHTML = key;\r\n    row.appendChild(day);\r\n\r\n    const time = document.createElement('td');\r\n    time.innerHTML = operatingHours[key];\r\n    row.appendChild(time);\r\n\r\n    hours.appendChild(row);\r\n  }\r\n}\r\n\r\n/**\r\n * Create all reviews HTML and add them to the webpage.\r\n */\r\nvar fillReviewsHTML = (error ,reviews = self.restaurant.reviews) => {\r\n  const container = document.getElementById('reviews-container');\r\n  // const title = document.createElement('h3');\r\n  // title.innerHTML = 'Reviews';\r\n  // container.appendChild(title);\r\n\r\n  if (error || !reviews) {\r\n    const noReviews = document.createElement('p');\r\n    noReviews.innerHTML = 'No reviews yet!';\r\n    container.appendChild(noReviews);\r\n    return;\r\n  }else{\r\n    const ul = document.getElementById('reviews-list');\r\n     ul.innerHTML = '';\r\n    if(window.Worker){\r\n      let revWorker = new Worker('scripts/workers/restaurantReviewsPreparation.js');\r\n      revWorker.postMessage({'reviews': reviews});\r\n      revWorker.onmessage = (message)=>{\r\n        let content = message.data.ul;\r\n        ul.innerHTML = ul.innerHTML + content;\r\n      }\r\n    }else{\r\n\r\n      reviews.forEach(review => {\r\n        ul.appendChild(createReviewHTML(review));\r\n      });\r\n      container.appendChild(ul);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Create review HTML and add it to the webpage.\r\n */\r\nvar createReviewHTML = (review) => {\r\n  const li = document.createElement('div');\r\n  \r\n  const name = document.createElement('p1');\r\n  name.innerHTML = review.name;\r\n//  li.appendChild(name);\r\n\r\n  const date = document.createElement('p2');\r\n  // date.innerHTML = review.date;\r\n//  li.appendChild(date);\r\n  let createDate = new Date(review.createdAt);\r\n  date.innerHTML = createDate.toDateString();\r\n\r\n  const head = document.createElement('h4');\r\n  head.appendChild(name);\r\n  head.appendChild(date);\r\n  head.className = 'reviewHead';\r\n  li.appendChild(head);\r\n  \r\n  const rating = document.createElement('p3');\r\n  rating.innerHTML = `Rating: ${review.rating}`; \r\n\trating.className = 'reviewRate ' + getRatingClassName(review.rating);\r\n  li.appendChild(rating);\r\n\r\n  const comments = document.createElement('p');\r\n  comments.innerHTML = review.comments;\r\n  li.appendChild(comments);\r\n\r\n  return li;\r\n}\r\n\r\nvar getRatingClassName = (rate) =>{\r\n\tlet rateName = 'unknownRate';\r\n\tif(rate == 0){\r\n\t\trateName = 'rate0';\r\n\t}else if(rate == 1){\r\n\t\trateName = 'rate1';\r\n\t}else if(rate == 2){\r\n\t\trateName = 'rate2';\r\n\t}else if(rate == 3){\r\n\t\trateName = 'rate3';\r\n\t}else if(rate == 4){\r\n\t\trateName = 'rate4';\r\n\t}else if(rate == 5){\r\n\t\trateName = 'rate5';\r\n\t}\r\n\treturn rateName;\r\n}\r\n\r\n/**\r\n * Add restaurant name to the breadcrumb navigation menu\r\n */\r\nvar fillBreadcrumb = (restaurant=self.restaurant) => {\r\n  const breadcrumb = document.getElementById('breadcrumbOL');\r\n  const li = document.createElement('li');\r\n  li.innerHTML = restaurant.name;\r\n  breadcrumb.appendChild(li);\r\n}\r\n\r\n/**\r\n * Get a parameter by name from page URL.\r\n */\r\nvar getParameterByName = (name, url) => {\r\n  if (!url)\r\n    url = window.location.href;\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\r\n    results = regex.exec(url);\r\n  if (!results)\r\n    return null;\r\n  if (!results[2])\r\n    return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n\r\n\r\nvar submitUserReviewForm = ()=>{\r\n  console.log('executing submitUserReviewForm');\r\n  let name = document.getElementById('reviewerName').value;\r\n  let comm = document.getElementById('reviewerComment').value;\r\n  let rateList = document.getElementsByName('rating');\r\n  let rate = 0;\r\n  for(let i = 0  ; i < rateList.length ;i++){\r\n    if(rateList[i].checked){\r\n      rate= rateList[i].value;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if(rate === 0 || name === '' || name === undefined || comm === '' || comm === undefined){\r\n    alert('missing Informations to submit your review...')\r\n  }else{\r\n    let reviewInfo = {'restaurant_id': self.resturantID, \r\n                    'name': name,\r\n                    'rating': rate,\r\n                    'comments': comm,\r\n                    'createdAt': Date.now()};\r\n    console.log(reviewInfo);\r\n    \r\n    let jsonData = JSON.stringify(reviewInfo);\r\n    fetch('http://localhost:1337/reviews/', {\r\n        method: 'POST', \r\n        body: jsonData,\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        }\r\n      }\r\n      ).then((response)=>{\r\n        if(response){\r\n          return response.json();\r\n        }else{\r\n          return undefined;\r\n        }\r\n        \r\n      }).catch((e)=>{\r\n        console.log(e);\r\n\r\n      }).then((jsonObj)=>{\r\n        //TODO \r\n        // check its completed successfully or not\r\n        if(jsonObj){\r\n          console.log('sucess ......');\r\n          console.log(jsonObj);\r\n          // refetch and update DB\r\n          afterSubmittingReviewSuccess();\r\n        }else{\r\n          // error \r\n          addToSyncListReviews(jsonData);\r\n          afterSubmittingReviewFail(reviewInfo);\r\n          alert('Your review will be submitted when you go online or the review service running..');\r\n        }\r\n      });\r\n     clearSubmittedReview(rateList);\r\n  }\r\n  \r\n\r\n}\r\n\r\n\r\nvar afterSubmittingReviewSuccess = ()=>{\r\n  DBHelper.fetchRestaurantReviews(resturantID, (error, reviews) => {\r\n      if (!reviews) {\r\n        console.error(error);\r\n        return;\r\n      }\r\n      fillReviewsHTML(null ,reviews);\r\n  });\r\n}\r\n\r\nvar afterSubmittingReviewFail = (review)=>{\r\n  const ul = document.getElementById('reviews-list');\r\n  ul.appendChild(createReviewHTML(review));\r\n}\r\n\r\nvar clearSubmittedReview = (rateList)=>{\r\n  document.getElementById('reviewerName').value = '';\r\n  document.getElementById('reviewerComment').value = '';\r\n  \r\n  for(let i = 0  ; i < rateList.length ;i++){\r\n    if(rateList[i].checked){\r\n      rateList[i].checked = false;\r\n      break;\r\n    }\r\n  }\r\n}"]}